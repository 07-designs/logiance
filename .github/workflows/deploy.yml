# .github/workflows/cd.yml
name: CD Pipeline
on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: logilo-cluster-dev

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Deploy GraphQL Service
      - name: Deploy GraphQL Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service graphql-service \
            --force-new-deployment \
            --task-definition $(aws ecs describe-task-definition \
              --task-definition logilo-graphql-dev \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

      # Deploy Account Service
      - name: Deploy Account Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service account-service \
            --force-new-deployment \
            --task-definition $(aws ecs describe-task-definition \
              --task-definition logilo-account-dev \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

      # Deploy Shopify Service
      - name: Deploy Shopify Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service shopify-service \
            --force-new-deployment \
            --task-definition $(aws ecs describe-task-definition \
              --task-definition logilo-shopify-dev \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

      # Deploy Payment Service
      - name: Deploy Payment Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service payment-service \
            --force-new-deployment \
            --task-definition $(aws ecs describe-task-definition \
              --task-definition logilo-payment-dev \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

      # Deploy Shipment Service
      - name: Deploy Shipment Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service shipment-service \
            --force-new-deployment \
            --task-definition $(aws ecs describe-task-definition \
              --task-definition logilo-shipment-dev \
              --query 'taskDefinition.taskDefinitionArn' \
              --output text)

      # Wait for services to stabilize
      - name: Wait for services to stabilize
        run: |
          for service in graphql-service account-service shopify-service payment-service shipment-service; do
            aws ecs wait services-stable \
              --cluster ${{ env.ECS_CLUSTER }} \
              --services $service
          done

      # Verify deployment
      - name: Verify deployment
        run: |
          for service in graphql-service account-service shopify-service payment-service shipment-service; do
            echo "Checking $service status..."
            aws ecs describe-services \
              --cluster ${{ env.ECS_CLUSTER }} \
              --services $service \
              --query 'services[0].{Status:status,DesiredCount:desiredCount,RunningCount:runningCount}'
          done
