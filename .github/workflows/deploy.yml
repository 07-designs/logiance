name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: logilo-cluster-dev
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create ECR repositories
        run: |
          for repo in graphql account-service shopify-service payment-service shipment-service; do
            echo "Checking or creating repository: $repo"
            aws ecr describe-repositories --repository-names $repo >/dev/null 2>&1 || \
            aws ecr create-repository \
              --repository-name $repo \
              --image-scanning-configuration scanOnPush=true
          done

      - name: Push images to ECR
        run: |
          services=("graphql" "account-service" "shopify-service" "payment-service" "shipment-service")
          for service in "${services[@]}"; do
            docker pull logilog/$service:latest
            docker tag logilog/$service:latest $ECR_REGISTRY/$service:latest
            docker push $ECR_REGISTRY/$service:latest
          done

      - name: Deploy Services
        run: |
          services=("graphql" "account-service" "shopify-service" "payment-service" "shipment-service")
          for service in "${services[@]}"; do
            echo "Deploying $service service..."
            aws ecs update-service \
              --cluster ${{ env.ECS_CLUSTER }} \
              --service ${service}-service \
              --force-new-deployment \
              --task-definition $(aws ecs describe-task-definition \
                --task-definition logilo-${service}-dev \
                --query 'taskDefinition.taskDefinitionArn' \
                --output text)
          done

      - name: Wait for services to stabilize
        run: |
          services=("graphql" "account-service" "shopify-service" "payment-service" "shipment-service")
          for service in "${services[@]}"; do
            aws ecs wait services-stable \
              --cluster ${{ env.ECS_CLUSTER }} \
              --services ${service}-service
          done

      - name: Verify deployment
        run: |
          services=("graphql" "account-service" "shopify-service" "payment-service" "shipment-service")
          for service in "${services[@]}"; do
            echo "Checking ${service}-service status..."
            aws ecs describe-services \
              --cluster ${{ env.ECS_CLUSTER }} \
              --services ${service}-service \
              --query 'services[0].{Status:status,DesiredCount:desiredCount,RunningCount:runningCount}'
          done
